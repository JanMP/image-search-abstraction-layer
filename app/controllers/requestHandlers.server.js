// Generated by CoffeeScript 1.10.0
(function() {
  var SearchEntry, path, request, urlStr;

  request = require("request");

  path = process.cwd();

  SearchEntry = require(path + "/app/models/searches.js");

  urlStr = "https://www.googleapis.com/customsearch/v1?key=AIzaSyD79lKLhaHzunEXAj_bYMkwVI3lx-dYdxM&cx=007414649059824118455:2qstsvfxe1o&searchType=image&q=";

  module.exports = function() {
    return {
      search: function(req, res) {
        var offset, query, ref;
        query = req.params.query;
        offset = (ref = req.query.offset) != null ? ref : 0;
        return request({
          url: urlStr + query + "?startIndex=" + offset,
          json: true
        }, function(err, msg, data) {
          var ref1, searchEntry;
          if (err) {
            throw err;
          }
          res.send((ref1 = data.items) != null ? ref1.map(function(d) {
            return {
              imageURL: d.link,
              thumpnailURL: d.image.thumbnailLink,
              altText: d.snippet,
              pageURL: d.image.contextLink
            };
          }) : void 0);
          searchEntry = new SearchEntry({
            query: query,
            offset: Number(offset),
            date: new Date()
          });
          return searchEntry.save(function(err, entry) {
            if (err) {
              throw err;
            }
            return console.log(entry.date + " : " + entry.query + " : " + offset);
          });
        });
      },
      list: function(req, res) {
        return SearchEntry.find({}).sort({
          date: -1
        }).limit(10).exec(function(err, list) {
          if (err) {
            throw err;
          }
          return res.send(list.map(function(d) {
            return {
              query: d.query,
              offset: d.offset,
              date: d.date
            };
          }));
        });
      }
    };
  };

}).call(this);
